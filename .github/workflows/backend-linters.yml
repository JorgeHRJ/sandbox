name: Acilia Backend Linters

on:
  push:
    branches:
      - master
      #- main
  pull_request:

jobs:
  php-cs-fixer:
    name: PHP CS Fixer
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: PHP-CS-Fixer
        uses: docker://oskarstark/php-cs-fixer-ga
        with:
          args: --rules=@PSR12 --diff --dry-run

  php-stan:
    name: PHP Stan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: PHPStan
        uses: docker://oskarstark/phpstan-ga
        with:
          args: analyse src/

  linters:
    name: Linters
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: ['7.4']

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install PHP version
        uses: shivammathur/setup-php@2.7.0
        with:
          coverage: "none"
          extensions: intl
          php-version: ${{ matrix.php-version }}
          tools: composer:v2

      - name: Set Composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache Composer dependencies
        uses: actions/cache@v2.1.2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-${{ matrix.php-version }}-composer-${{ hashFiles('composer.lock') }}
          restore-keys: ${{ runner.os }}-${{ matrix.php-version }}-composer-

      - name: Install dependencies
        id: install
        run: composer install --no-interaction --no-progress --prefer-dist --no-suggest --ignore-platform-reqs

      - name: Lint YAML files
        if: always() && steps.install.outcome == 'success'
        run: bin/console lint:yaml config --parse-tags

      - name: Lint Twig templates
        if: always() && steps.install.outcome == 'success'
        run: bin/console lint:twig templates --env=prod

      - name: Lint Parameters and Services
        if: always() && steps.install.outcome == 'success'
        run: bin/console lint:container --no-debug

      - name: Lint Doctrine entities
        if: always() && steps.install.outcome == 'success'
        run: bin/console doctrine:schema:validate --skip-sync -vvv --no-interaction

      - name: Lint Composer config
        if: always() && steps.install.outcome == 'success'
        run: composer validate --strict

      - name: Download Symfony CLI
        if: always() && steps.install.outcome == 'success'
        run: wget https://get.symfony.com/cli/installer -O - | bash

      - name: Check if any dependencies are compromised
        if: always() && steps.install.outcome == 'success'
        run: /home/runner/.symfony/bin/symfony check:security
